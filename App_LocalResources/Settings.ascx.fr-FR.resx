<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Paramètres de BBContact</value>
  </data>
	<data name="lblAddress.Text" xml:space="preserve">
    <value>Adresse</value>
  </data>
	<data name="lblBodytext.Help" xml:space="preserve">
    <value>Entrez le Mailtext pour le Emailbody. Utiliser les espaces réservés suivants:[FIRSTNAME],[LASTNAME],[ORGANIZATION],[ADDRESS],[PHONE],[FAX],[EMAIL],[INTEREST],[PRODUCT],[REMARK]</value>
  </data>
	<data name="lblBodytext.Text" xml:space="preserve">
    <value>Corps du message</value>
  </data>
	<data name="lblEmail.Text" xml:space="preserve">
    <value>Messagerie</value>
  </data>
	<data name="lblFax.Text" xml:space="preserve">
    <value>Télécopieur</value>
  </data>
	<data name="lblFirstname.Text" xml:space="preserve">
    <value>Prénom</value>
  </data>
	<data name="lblLastname.Text" xml:space="preserve">
    <value>Nom de famille</value>
  </data>
	<data name="lblOrganization.Text" xml:space="preserve">
    <value>Organisation</value>
  </data>
	<data name="lblPhone.Text" xml:space="preserve">
    <value>Téléphone</value>
  </data>
	<data name="lblRecipientEmail.Help" xml:space="preserve">
    <value>Saisissez l'adresse électronique où les informations de le formulaire de contact devrait être envoyé</value>
  </data>
	<data name="lblRecipientEmail.Text" xml:space="preserve">
    <value>Envoyer par courriel à</value>
  </data>
	<data name="lblRemark.Text" xml:space="preserve">
    <value>Remarque</value>
  </data>
	<data name="lblSenderEmail.Help" xml:space="preserve">
    <value>Entrez l'adresse e-mail de l'expéditeur (par exemple "contact@mydomain.com") ou utilisez l'espace réservé [EMAIL]</value>
  </data>
	<data name="lblSenderEmail.Text" xml:space="preserve">
    <value>E-mail de l'expéditeur</value>
  </data>
	<data name="lblSenderName.Help" xml:space="preserve">
    <value>Entrez le nom de l'expéditeur (par exemple "formulaire de Contact sur www.mydomain.com ») ou utiliser les espaces réservés suivants: [FIRSTNAME],[LASTNAME],[ORGANIZATION],[ADDRESS],[PHONE],[FAX],[EMAIL],[REMARK]</value>
  </data>
	<data name="lblSenderName.Text" xml:space="preserve">
    <value>Nom de l'expéditeur</value>
  </data>
	<data name="lblSendToUser.Help" xml:space="preserve">
    <value>Vérifiez si vous voulez envoyer une copie à l'utilisateur aussi</value>
  </data>
	<data name="lblSendToUser.Text" xml:space="preserve">
    <value>Envoyer copie à l'utilisateur</value>
  </data>
	<data name="lblSubject.Help" xml:space="preserve">
    <value>Entrez l'objet de l'email. Utiliser les espaces réservés suivants: [FIRSTNAME],[LASTNAME],[ORGANIZATION],[ADDRESS],[PHONE],[FAX],[EMAIL],[REMARK]</value>
  </data>
	<data name="lblSubject.Text" xml:space="preserve">
    <value>Objet</value>
  </data>
	<data name="lblFields.Help" xml:space="preserve">
		<value>Vérifiez les champs qui doivent être affichés et qui sont obligatoires à remplir.</value>
	</data>
	<data name="lblFields.Text" xml:space="preserve">
		<value>Afficher les champs</value>
	</data>
	<data name="lblMandatory.Text" xml:space="preserve">
		<value>obligatoire</value>
	</data>
	<data name="lblVisible.Text" xml:space="preserve">
		<value>visible</value>
	</data>
	<data name="lblBootstrap.Help" xml:space="preserve">
		<value>Vérifiez si vous avez une peau bootstrap 3</value>
	</data>
	<data name="lblBootstrap.Text" xml:space="preserve">
		<value>Utilisez  bootstrap 3</value>
	</data>
	<data name="lblInterest.Text" xml:space="preserve">
		<value>Intérêt</value>
	</data>
	<data name="lblInterests.Help" xml:space="preserve">
		<value>Entrez une liste séparée par des virgules des sujets, sera affiché dans le contrôle dropdownlist</value>
	</data>
	<data name="lblInterests.Text" xml:space="preserve">
		<value>Intérêt</value>
	</data>
	<data name="lblProductHelp.Help" xml:space="preserve">
		<value>Placer les images dans le dossier &lt;i&gt;/Portals/x/Images/BBContact/&lt;/i&gt;. Doit être le type de fichier png !</value>
	</data>
	<data name="lblProduct.Text" xml:space="preserve">
		<value>Produit </value>
	</data>
</root>